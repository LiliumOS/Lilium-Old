name: C/C++ CI Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_clang:
    runs-on: ubuntu-latest
    steps:
    - name: Cache tools
      id: tools
      uses: actions/cache@v2
      with:
        path: ${{runner.workspace}}/tools/local
        key: ${{runner.os}}-phantomos-tools-clang-x86_64-pc-phantom-kernel
        restore-keys: ${{runner.os}}-phantomos-tools-clang-x86_64-pc-phantom-kernel
    - name: Create tools directory
      run: |
        mkdir -p ${{runner.workspace}}/tools/local/{bin,lib,include,share}
        echo '${{runner.workspace}}/tools/local/bin' > $GITHUB_PATH
    - name: Install build dependencies
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        sudo apt install bison texinfo
    - name: Extract binutils
      working-directory: ${{runner.workspace}}/tools
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        echo "$PATH"
        git clone https://github.com/PhantomOS/binutils-gdb
        mkdir -pv ${{runner.workspace}}/tools/binutils-gdb/build/x86_64-pc-phantom-kernel
      shell: bash
    - name: Build x86_64-pc-elf cross binutils
      working-directory: ${{runner.workspace}}/tools/binutils-gdb/build/x86_64-pc-phantom-kernel
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        CFLAGS="-O3" ${{runner.workspace}}/tools/binutils-gdb/configure --prefix=${{runner.workspace}}/tools/local --with-sysroot --enable-gold=default --target=x86_64-pc-phantom-kernel
        make -j8
        make install-strip
      shell: bash       
    - name: Extract gcc 
      working-directory: ${{runner.workspace}}/tools
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        echo $PATH
        git clone https://github.com/PhantomOS/gcc.git
        curl https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz | tar -Jx
        mv -v gmp-6.2.1 gcc/gmp
        curl https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz | tar -Jx
        mv -v mpfr-4.1.0 gcc/mpfr
        curl https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz | tar -zx
        mv -v mpc-1.2.1 gcc/mpc
        mkdir -p ${{runner.workspace}}/tools/gcc/build/x86_64-pc-phantom-kernel
      shell: bash
    - name: Build x86_64-pc-elf gcc
      working-directory: ${{runner.workspace}}/tools/gcc/build/x86_64-pc-phantom-kernel
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        CFLAGS="-O3" ${{runner.workspace}}/tools/gcc/configure --prefix=${{runner.workspace}}/tools/local --without-headers --target=x86_64-pc-phantom-kernel --enable-languages=c,c++ --disable-shared --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-newlib
        make -j8
        make install-strip
      shell: bash
    - name: Checkout llvm-project
      if: steps.tools.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/PhantomOS/llvm-project.git ${{runner.workspace}}/tools/llvm-project
    - name: Build llvm-project
      if: steps.tools.outputs.cache-hit != 'true'
      uses: LightningCreations/action-cmake-build@v1.2
      with:
        source-dir: ${{runner.workspace}}/tools/llvm-project/llvm
        build-dir: ${{runner.workspace}}/tools/llvm-project/build-x86_64-pc-phantom-kernel
        configure-options: -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/tools/local -DLLVM_ENABLE_PROJECTS="clang;lld" 
        build-type: Release
        install-build: true
        install-options: --strip
    - name: After build llvm-project
      run: |
        ln -sfv ld.lld ${{runner.workspace}}/tools/local/bin/x86_64-pc-phantom-kernel-ld.lld
    - name: Checkout
      uses: actions/checkout@v2.3.0
      with:
        submodules: true
    - name: Clang Build
      uses: LightningCreations/action-cmake-build@v1.2
      with:
        # C Compiler for toolchain
        cc: ${{runner.workspace}}/tools/local/bin/clangclang # optional
        parallel: 8
        build-dir: ${{runner.workspace}}/build
        configure-options: -DPHANTOMOS_USE_LINKER=lld
        
        

