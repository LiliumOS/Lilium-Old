name: C/C++ CI Linux (gcc)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_gcc:
    runs-on: ubuntu-latest
    steps:
    - name: Install apt dependencies
      run: |
        sudo apt install curl
      shell: bash
    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      shell: bash
    - name: Cache tools
      id: tools-cache
      uses: actions/cache@v2
      with:
        path: ${{runner.workspace}}/tools/local
        key: ${{matrix.config.name}}-phantomos-tools-${{steps.get-date.outputs.date}}
        restore-keys: ${{matrix.config.name}}-phantomos-tools-
    - name: Extract binutils
      working-directory: ${{runner.workspace}}/tools
      if: steps.tools-cache.outputs.cache-hit != 'true'
      run: |
        curl https://ftp.gnu.org/gnu/binutils/binutils-2.35.tar.xz | tar -Jx
      shell: bash
    - name: Build x86_64-pc-elf cross binutils
      working-directory: ${{runner.workspace}}/tools/binutils-2.35/build/x86_64-pc-elf
      if: steps.tools-cache.outputs.cache-hit != 'true'
      run: |
        CFLAGS="-O3" ../../configure --prefix=${{runner.workspace}}/tools/local --with-sysroot --enable-gold=default --target=x86_64-pc-elf
        make -j8
        make install-strip
      shell: bash
    - name: Set PATH
      run: |
         echo '${{runner.workspace}}/tools/local/bin' > $GITHUB_PATH
      shell: bash
    - name: Extract gcc 
      working-directory: ${{runner.workspace}}/tools
      if: steps.tools-cache.outputs.cache-hit != 'true'
      run: |
        curl https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.xz | tar -Jx
        mkdir gcc-10.2.0/build
        curl https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz | tar -Jx
        mv -v gmp-6.2.1 gcc-10.2.0/gmp
        curl https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz | tar -Jx
        mv -v mpfr-4.1.0 gcc-10.2.0/mpfr
        curl https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz | tar -zx
        mv -v mpc-1.2.1 gcc-10.2.0/mpc
      shell: bash
    - name: Build x86_64-pc-elf gcc
      working-directory: ${{runner.workspace}}/tools/gcc-10.2.0/build/x86_64-pc-elf
      if: steps.tools-cache.outputs.cache-hit != 'true'
      run: |
        CFLAGS="-O3" ../../configure --prefix=${{runner.workspace}}/tools/local --without-headers --target=riscv64-pc-elf --enable-languages=c,c++ --disable-shared --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-newlib
        make -j8
        make install-strip
      shell: bash
    - name: Checkout
      uses: actions/checkout@v2.3.0
      with:
        submodules: true 
    - name: x86_64-pc-elf-gcc Build
      uses: LightningCreations/action-cmake-build@v1.2
      with:
        # C Compiler for toolchain
        cc: x86_64-pc-elf-gcc # optional
        parallel: 8
        build-dir: ${{runner.workspace}}/build-clang 
        configure-options: -DPHANTOMOS_USE_LLD=OFF


      

